<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAKAC
        AAAAAAAAAAAAAAABAAAAAAAAUUpJAPXRewALB9QALkf4AEDSagAtS/gAIjf9AAgiVQCU4/8AGx/6ABIv
        jADuxGsAP9BrAB5EpwBDPjsAMrT+AE6o/wBAwv8AFTyVACFKrABERe0AJmAbAEI5NgAbIPsAG0SZAOKj
        LAAnZCEAObv+AFLV/wAHAqsALq7/ACBFpQA6NjQAAAAAADUrJgCa5f8ACgfDAD3RcwDlrUYAJDr4AOq6
        VwBMRUMAYuP/ACZC+ABLyv4AScj+ABc8nwA6LysASkRCAETYbAAQJ3IACga9ACAy9wA5038ARsj+AEG/
        /wC09P8AsPT/AE3O/wBITlIAd6m5AA0V/gA62n0AECqQAD++/gBFzP8AYLz7ACNQuACW1v8A5sCGAB9J
        sAAyVPgA1I41AKz4/wAfNfcAL0JtADGZJACxhVsAKJ3DADSwSgAVGccAfuatAAhb4wAuc+0AZF5dAGOG
        jwDMehYASD8+AHKpwABA14oAAAAAAOqxQgBbjakARlRaAFTM/gCAwf8AGz2UALH6/wA8uv0AEk7KACeC
        5wAogXIANtJ7AF2jXQALInoAp/D/ADW4/wA0s/8AMCQgADXdgACZ7P8Anuq5AAwF4QAWMIEARz8wAAYB
        yAA024IAjuj/AAgEtQAHArsAZYr6AKPv/wAoe9QAPLz9AD29/gBxfPQAUkxJACFNsACo+P8AGDiMAHbM
        6QBk0/8AImLGABh8sgBAzWAAtpdnAFhvzQA35IIAmoFYAP/cngAtPfYAQGP6AG60cwAXdOcAEgnKAAAA
        AADcnD4ADR9fAEKW4QAAFZQAS5H6ADzakwDOhjEAn/f/ABca7QAuHRcAMSEcACMS2QDhpkQA7qtLADw0
        LQCsWR0AuGgcAKNcNgD/13MA8bpKAFXdhABPndUALYIsAJ2n/wAvhTIAXdr/ADiu+ABVs/EAQDYxADvN
        bQBUuGQAiMbYAFbE/wBaz/4AIGCZABx31wCN9v8AAAAAAD54+wDGeicAR0FAAE+n5QBHSUcAUElIAIF9
        eQA30G4AGiz4AIbf/gArjfIADoT7ABeQ/wB8orgADwD4AHiquQBRrFwACyRlAE+PSwCm+P8Ao//8ADRa
        +gCi9v8AKYx9AHfZ/wAgS7sAN7T/AMBxHADmuHcAJ4qIACmTkQCe6/8ALGjYAJzu/wCh47wAAAHjAEDa
        cgABA+wAFDiKAETE/wB6t9EA6bteAAwIywAy2IIAidP/AInl/wCq9f8ABwS1AKHqzgAAHWoAK12zAGSE
        /gDzsBwA7cFbAPHBVgAZU8MAp+z/AEXcaQAvftcAQJPnAPbKaQAjcdIAPrz+AG128wDQjzwA6LBIAB9G
        oABOR0QAIkmzACFOtgAzUf8A////ACEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEd5zMzAgLi
        JCQddiEhISEhISEhISEhIXcUCRcXCQkJFxcXmiQhISEhISEhISEhIXP3wDQ0NDQ0NDQ0BtshISEhISEh
        ISEhIQJ9AysrJ0onKysrNJAhISEhISEhISEhIXAUeAUFlsxCA0fNPaNW06KhISEhISEhISHGqeu4Kqsq
        EI3+newZGRkZuSEaGhoVqEwVUIgQ89hjwozdn1smJib5mMpPhjExMfFlMsnqsh4e7wcHiu4oKCjt+I6m
        DAwMDASvcTKtG2L2EZPph/QLCwvhSGdRvyUlJSXcz2huXjYtHBK+i0WkAQGekqraWWY1NTU+1fo4CAjl
        tt6ExMNS1KUmISHI6JfjdG2J1j9p8DmnGHH1ag9qj00hISEhsG9OlFO1tC7qYYIKYIF630A3QZUhISEh
        IYXk0h5rZB8NLi76+hK7gywsHPIhISEhIV83G3t8N/x/fxMTRvrO1yMjyyIhISEhIUTQszYtOqzRQyH9
        S6Cb4OZJWGwhISEhIcWZ2SPBdVwhISEhcg4WvMdVIiAhISEhISKcXXlpgCAhISEhKfswVxYWDiAhISEh
        IQ4WLzyxOy8hISEhIQAAAL37KSEhISEhIQAwuhauFg4hISEhISEhISEhISEhISEhISEAAL1UfiEhISEh
        ISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIf//
        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
        /wDgP/8A////AP///wA=
</value>
  </data>
</root>