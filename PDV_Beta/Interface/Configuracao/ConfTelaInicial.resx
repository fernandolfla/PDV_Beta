<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAKAC
        AAAAAAAAAAAAAAABAAAAAAAAA7P9AA0wqQAAAAAAXH7NAAw0rAANK6cACiupAA0zrABP5P4AT+P+AFLg
        /gACuf0AIGrLAAVPzQBJec0ATuj9AE/f/gBTgtAAAb39AAHO/AAiWMQAAsz8AADS+wBF5/0AAb79AAHF
        /AAByP0AWYbSAE7p/QADtf4AAbr9AAO0/QADtv8AT+L+AE3m/QACy/wAAdH7AFOBzwAKUMYAAdD7AAHB
        /QADr/0ADiqlAADZ/gAIceIA6/r+AC++7AABxvwAAMH9AEzm/gD38/kAWoTQANLY7QAFqf4Asvb9ACfX
        /gCPrN0AiOX/AAR42ABM2v4AAMX/AAlUzQBF1f8ARInaABRXyQACuf8ARNj+AFOA0AABy/wAAcf8AFew
        4gBQ4fsAAN//AEHq/gBO6/4AVeX+AAG7/gBG5/0Aqv//AKr6/wBQ4P0AWa3jAA0yqQBYg9EADcf9AC3x
        /wAFovEAWITRAN3t+QAML6kAANH7AFXd/gBP2P4AovL9AAWn/wBOfc4ABZ/xAD32/wBcf9AAAMj8AD/t
        /QBiidIAAMX8AFDQ/wA8zP8AALr9AEzS/wAEsP4ATur9AE7e/gCpv+YAA7X/AADU/QBNfc4AC1HNAHSZ
        1wBahdEAAMP9AAGx/wBO5/8ASu78AE7m/gBN5P4AArv/AFLt/wBR4v8AUXvNAADL/ABbgM8AAcf+AADO
        +wAAzP4AAM7/AEvo/wBT2P4Azfb/AMn//wAGLagAY6viABvR9gAS1vwAY7bnAEjn/QADsP0ACd79ADvc
        /gADsv8ATfT/AP///wBF+f8ArPn/AFXW/gAWzf0AA6r8AAO7+ADw+v4A9f//AAjk/gBP3P4ATd7/ANTb
        7wAJYNgAB23cACXf/QBVhNEAM5rcANHW7QBV6v4AT+H+AN/f8ABe7P8AUPT/ABCe9gBQ+f8AV9z+AFTf
        /gBY2v4AT9r+AEfl/QAGpvkAeeH/AFq04gBC6P0AQen/AFLn/QBP5f8A3tzwAFiv4QBY5P4AWa/iAADV
        +gAByPwAAcn9ADaR1wAJLKkAOdD+ADzR/wBP7v0AZojSAAHE/ACpx+gAAcX9AFLS/gALKqYADSynADzP
        /gALNq4ADDeuANPa7gBLes0AAdP/AIj2/wCRrt0AUJriAAwxqwBN7PwAqL3lAAOt/wBRgM8AAOD/AAK1
        /wAAtP0AAbv9AAHR/QAA1vwAT37OAFJ7zQBn5v8Ac5fXAAO2/QBbhdAAU4PRAAHC/QABw/0AALH+AAhd
        zgAAsf8AAc/8AAHE/gARjesASe/8AE7r/AABvP0AT3vNAE3n/QBN5f8ADDGsAAC3/QBS7P8AUeL+AFKB
        0ABQb8gAUHrNAEXW/wAA2f8A////AAICAgLOwtYCAgICAgICAgICBAHPAgICAgICAgIGYTr2BwICAgIC
        AgQHoV4BAgICAgICAgIGi/5E6wUEAgIEzD01dqxZAgICAgICAgINLnDf0pomBQUms0Fr2e8NAgICAgIC
        AgIMpSsnE4OEVmA8TB8pkqIMAgICAgICAgICDEgkEyO/ge4SCx+Pb0ACAgICAgICAgIC+9sW7RUaGegS
        HuUAIBQCAgICAgICAgICFFUWJxPAL8kY3gsAe8sCAgICAgICAgICFJDgJBMjRccoEgsdmSoCAgICAgIC
        AgJiwZ2+WoIVGhnpGB4L3CwBAgICAgICAoC9q6eyo4x/Y2Z1MPILHSByUgICAgICgLuTSg8cuEu8kTeY
        VGn33ersDYkCAgKARq3F8RwPIggJ+QqvW66ww81oxD/zAlO1lfB412wP9HkIIQoQnrFchpfKZ2rVdNqU
        iE7TZEm2FyIICQoQbTtC/T60OYecJRvn5DimujItTxcICagQn+ObWKk01HOkGwICAgIODnHR2PgxCCEK
        9Yr8Xw4REQICAgICAgICAgICfjZNCAl9UAMCAgICAgICAgICAgICAgICQ258egl3UeYCAgICAgICAgIC
        AgICAgICAuJdjrlHAwICAgICAgICAgICAgICAgICAlfIt4WNMwICAgICAgICAgICAgICAgICAgJllqrG
        AgICAgICAgICAgICAgICAgICAgLhoNAlAgICAgICAgICAgICAgICAgICAgIC+hECAgICAgICAgICAvH/
        jwDwfg8A8BgPAPAADwDwAA8A+AAfAPgAHwD4AB8A+AAfAPAADwDgAAcAwAADAIAAAQAAAAAAAAAAAAAA
        AADwAAcA/wD/AP8A/wD/gf8A/4H/AP/D/wD/w/8A/+f/ACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACzau2wksqf8MMavADDeuAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADDeuAQw0rMANMan/DDeu2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACSup/z32//8EeNj/DDGs/w0yrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMNKyoDTOs/wlg
        2P8Fp///DTCp/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACiqp5hvR9v8A2f//Acv8/whd
        zv8NKqf/DDSsgAAAAAAAAAAADDWsgA0sp/8JVM3/Ban+/wGx//8Qnvb/DC+p3QAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAACSypvS++7P8A1P3/AdH9/wHT//8Du/j/ClDG/w0rp/8NK6f/ClDG/wam
        +f8Cuf//BLD+/wOt//8Rjev/DDCpuQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACS+rhDOa
        3P8A2f7/AdD7/wHO/P8AzP7/AM7//wWi8f8Fn/H/AMX//wG7/v8DtP3/A6/9/wOy//8Hbdz/DTKrgAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTKsTSBqy/8A3///AdH7/wHO/P8Cy/z/Acj8/wHH
        /v8BxP7/Ab39/wK5/f8DtP3/A7D9/wO1//8UV8n/CzWsRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACTOtJFBvyP8A4P//ANL7/wHP/P8CzPz/Acj9/wHF/P8Bwv3/Ab39/wG6/f8Dtv3/A7L9/wO2
        //8iWMT/CzWtIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAckpv8t8f//ANL7/wHQ
        +/8Bzfz/Acn9/wHG/P8Bxf3/Ab79/wG7/f8CuP3/A7P9/wK7//8LKqb/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAghpf8J3v3/ANb8/wHR+/8Bzvz/Asv8/wHH/P8BxPz/AcH9/wG9
        /f8Cuf3/A7X+/wOq/P8NKaX+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXH/Q5TaR
        1/8I5P7/ANX6/wDR+/8Azvv/Asz8/wHI/f8Bxfz/AcP9/wG+/f8Buv3/Arn9/wK1//8IceL/DTCo5QAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcgc/lWa/i/1D0//9V6v7/R+X9/yXf/f8S1vz/AMv8/wDI
        /P8Axfz/AMP9/wDB/f8BvP3/Arn9/wO1/v8Dtv//C1HN/wwyqeUAAAAAAAAAAAAAAAAAAAAAAAAAAFyA
        z+VYr+H/TfT//07r/v9O6P3/Tun9/1Ln/f9V5f7/WOT+/zvc/v8n1/7/Fs39/w3H/f8Auv3/ALf9/wC0
        /f8Asf7/ALH//wVPzf8GLajlAAAAAAAAAAAAAAAAW4DP5lew4v9Q+f//T+79/07r/P9O6f3/Tuj9/03m
        /f9P5P7/T+P+/1Hi/v9S4P7/VN/+/1Xd/v9X3P7/WNr+/znQ/v88z/7/PMz//zzR//9Eidr/T3vN5gAA
        AABYg9GaWrTi/0X5//9J7/z/Su78/03s/P9O6v3/Tuj9/03n/f9O5v7/T+T+/0/i/v9S4P7/T9/+/0/c
        /v9P2v7/T9j+/1PY/v9V1v7/UtL+/1DQ//9M0v//UJri/1qF0ZpRgM///////8n///+q////iPb//z/t
        /f9B6v7/Quj9/0Xn/f9N5v3/T+T+/0/j/v9S4P7/T9/+/07e/v9M2v7/RNj+/0XW//9F1f//eeH//4jl
        ///N9v//9f///1OBz/9ZhtLKU4PR/3OX1/+PrN3/0dbt/97c8P/38/n/6/r+/6r6//9F5/3/T+T+/0/j
        /v9P4f7/T9/+/03e//9n5v//8Pr+/93t+f/f3/D/0tjt/5Gu3f90mdf/VYTR/1mG0soAAAAAAAAAAEx8
        zhRDdMpCUYLPhkl5zZxNfc7TS3rN/6i95f9S7P//TOb+/0/k/v9P4v7/UuD+/03l//9jq+L/UHrN/059
        ztRJec2cU4LQgkd3zD1MfM4VAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFF7
        zf+y9v3/Ruf9/0/k/v9P4/7/UeL//1Dg/f9bfs3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFOA0Iipv+b/Uu3//03k/v9P4/7/Tuf//1mt
        4/9bhdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABSe83/ovL9/0jn/f9P5f//UOH7/1x+zf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYhNGoqcfo/0Hp
        //9L6P//Y7bn/1qE0KgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABah9EIYonS/6z5//9e7P//ZojS/1qH0QgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAT37OsNTb7//T2u7/U4HPpwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUH7OCFKB0P9TgtD/WofRBQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw/w8A8H4PAPAYDwDwAA8A8AAPAPAA
        DwDwAA8A+AAfAPgAHwDwAA8A4AAHAMAAAwCAAAEAAAAAAAAAAAAAAAAAwAADAP8A/wD/AP8A/4H/AP+B
        /wD/gf8A/8P/AP/D/wA=
</value>
  </data>
</root>